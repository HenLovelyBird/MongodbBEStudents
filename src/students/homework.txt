/* 
    Upgrade Students Portfolio Project
    //BACKEND
    - Add validation with Validator package --> https://www.npmjs.com/package/validator:
    explore the documentation and try to experiment as many validation methods as possible.
    - Add PATCH route:
    PATCH /students/:id => edit the student with the given id, this route should contain a list of fields for which updates are allowed.
    If req.body contains a field not in the white list --> res.status(400).send('Invalid updates!')
    - Upgrade GET /students route by returning students + totalStudents, number of all the students in the collection (I mean ALL)
    - Add Sort, Skip, Limit to route GET /students/:
    Client should have the possibility to call the route and set as query parameters sort, skip, limit. Skip and limit are numbers, sort is a string
    containing the field to sort in descending order. [EXTRA] Try to send also the preference for ascending or descending order.
    //FRONTEND
    In past homework you focused on backend stuff leaving out frontend. Today go and complete previous homework's features.
    [EXTRA] Add pagination to students list --> add page numbers buttons to the list and do a little math. How many pages do you need to display 10 students
    per page? How could I use skip and limit from the backend to correctly use serverside pagination?
*/